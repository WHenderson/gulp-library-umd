// Uses CommonJS, AMD or browser globals to create a jQuery plugin.

(function (factory) {
    if (typeof define === 'function' && define.amd) {
        // AMD. Register as an anonymous module.
        {{ mode = 'amd'; }}
        define([{{= it.mode[mode].libStrings }}], {{#def.defineFactoryMapped}});
    } else if (typeof module === 'object' && module.exports) {
        // Node/CommonJS
        {{ mode = 'cjs'; }}
        module.exports = function( root, jQuery ) {
            if ( jQuery === undefined ) {
                // require('jQuery') returns a factory that requires window to
                // build a jQuery instance, we normalize how we use modules
                // that require this pattern but the window provided is a noop
                // if it's defined (how jquery works)
                if ( typeof window !== 'undefined' ) {
                    jQuery = require({{= it.mode[mode].libStrings[0]}});
                }
                else {
                    jQuery = require({{= it.mode[mode].libStrings[0]}})(root);
                }
            }
            factory(jQuery{{~ it.factory.args : arg : index}}{{? it.mode[mode].require[arg]}}{{? index != 0}}, require({{= JSON.stringify(it.mode[mode].require[arg]) }}){{?}}{{??}}, void 0{{?}}{{~}});
            return jQuery;
        };
    } else {
        // Browser globals
        {{ mode = 'web'; }}
        factory({{~ it.factory.args : name : index}}{{? index != 0 }}, {{?}}{{? it.mode[mode].require[name]}}{{= it.mode[mode].require[name] }}{{??}}void 0{{?}}{{~}});
    }
}(function ({{= it.factory.args }}) {
  {{= it.contents }}
}));
